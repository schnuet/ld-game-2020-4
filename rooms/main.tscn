[gd_scene load_steps=25 format=2]

[ext_resource path="res://Creature/Kronenberg.tscn" type="PackedScene" id=1]
[ext_resource path="res://Test.gd" type="Script" id=2]
[ext_resource path="res://objects/Player.tscn" type="PackedScene" id=3]
[ext_resource path="res://sprites/tiles/Collision.png" type="Texture" id=4]
[ext_resource path="res://sprites/tiles/Navigation.png" type="Texture" id=5]
[ext_resource path="res://objects/Ladder.tscn" type="PackedScene" id=6]
[ext_resource path="res://sprites/tiles/Ladder.png" type="Texture" id=7]
[ext_resource path="res://sprites/tiles/tileset.tres" type="TileSet" id=8]
[ext_resource path="res://background/Background.tscn" type="PackedScene" id=9]
[ext_resource path="res://objects/stations/StomachStation.tscn" type="PackedScene" id=10]
[ext_resource path="res://objects/stations/KidneyStation.tscn" type="PackedScene" id=11]
[ext_resource path="res://objects/stations/HeartStation.tscn" type="PackedScene" id=12]
[ext_resource path="res://objects/stations/BrainStation.tscn" type="PackedScene" id=13]
[ext_resource path="res://objects/stations/ImmuneStation.tscn" type="PackedScene" id=14]
[ext_resource path="res://objects/stations/MovingStation.tscn" type="PackedScene" id=15]
[ext_resource path="res://objects/stations/LungStation.tscn" type="PackedScene" id=16]
[ext_resource path="res://objects/stations/FatStation.tscn" type="PackedScene" id=17]
[ext_resource path="res://sounds/ingame_music.ogg" type="AudioStream" id=18]
[ext_resource path="res://objects/enemy/EnemyManager.tscn" type="PackedScene" id=19]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

var Minion = preload(\"res://objects/Minions/Minion.tscn\");
var inGameMusicStream = preload(\"res://sounds/ingame_music.ogg\")

export(Vector2) var end
export var stomach_energy_timer_minimum = 1
export var stomach_energy_timer_maximum = 10
export var stomach_energy_handicap_duration = 60
var nav2D : Navigation2D

onready var kidney = $Stations/KidneyStation
var idle_minions = []
var path = []

func _input(event):
	# If the user press a mouse button
	if event is InputEventMouseButton:
		print(\"Mouse Click/Unclick at: \", event.position)
		if event.button_index == BUTTON_RIGHT:
			# If it's the right button, set the ending point
			end = event.position
			print_debug(\"Clicked\")
			if !idle_minions.empty():
				for minion in idle_minions:
					minion.go_to_position(end)
	if event is InputEventKey:
		if event.pressed and event.scancode == KEY_K:
			kidney.perform_action()


# Called when the node enters the scene tree for the first time.
func _ready():
	$MusicPlayer.stream = inGameMusicStream
	$MusicPlayer.play()
	nav2D = get_node(\"Navigation2D\")
	_reset_position()
	$EnemyManager.init($Stations/HeartStation, $Stations/StomachStation, nav2D)
	for station in find_node(\"Stations\").get_children():
		station.connect(\"worker_requested\", self, \"on_worker_requested\")
		station.connect(\"worker_removed\", self, \"on_worker_removed\")
		station.connect(\"station_protein_requested\", self, \"on_station_protein_requested\")
		station.connect(\"station_brain_token_requested\", self, \"on_station_brain_token_requested\")
		station.connect(\"built\", self, \"_on_Station_built\")

func _reset_position():
	$EfficiencyTween.stop_all()
	$EfficiencyTween.interpolate_property(
		$Stations/StomachStation/EnergyTimer,
		\"wait_time\", stomach_energy_timer_minimum,
		stomach_energy_timer_maximum, stomach_energy_handicap_duration,
		Tween.TRANS_LINEAR, Tween.EASE_IN)
	$EfficiencyTween.start()

func on_worker_requested(station):
	var m = idle_minions.pop_front()
	if m != null:
		m.assign_to_station(station)
		station.on_minion_assigned(m)

func on_worker_removed(station):
	var assigned_minions = station.get_assigned_minions()
	if assigned_minions.empty():
		return

	var minion_removed = _try_to_remove_not_working_minion_from_station(station, assigned_minions)

	if minion_removed == false:
		_remove_minion_from_station(station, assigned_minions[0])

# Minions without energy are not working
func _try_to_remove_not_working_minion_from_station(station, assigned_minions):
	for minion in assigned_minions:
		if minion.is_carrying_energy_back() == false:
			_remove_minion_from_station(station, minion)
			minion.go_to_position($Stations/KidneyStation.get_position_for_minions())
			return true
	return false

func _remove_minion_from_station(station, minion):
	minion.go_to_position($Stations/KidneyStation.get_position_for_minions())
	station.on_minion_removed(minion)
	idle_minions.push_back(minion)

func on_station_protein_requested(station):
	print(\"Station requested protein\", station);
	station.receive_protein_from($Player, 1);

func on_station_brain_token_requested(station):
	print(\"Station requested brain token\", station);
	$Player.has_brain_token = false;
	station.add_brain_token();

# return stomach.
# alternatively, return FatStation
func get_energy_source():
	var fat_station_built = $Stations/FatStation.visible == true;
	if (
		fat_station_built &&
		$Stations/StomachStation/ResourceStore.energy < 1 &&
		$Stations/StomachStation/ResourceStore.energy > 1
	):
		return $Stations/FatStation;
	return $Stations/StomachStation

func _process(delta):
	# Get the list of points that compose the path
	#path = nav2D.get_simple_path(minion.position, end)
	# Update the node so the _draw() function is called
	update()

func _draw():
	# This draw a white circle with radius of 10px for each point in the path
	for p in path:
		#print_debug(p)
		draw_circle(p, 10, Color(1, 1, 1))

# room connections
func _on_StomachStation_player_requested_protein():
	$Stations/StomachStation.give_protein_to($Player, 1);

func _on_KidneyStation_minion_creation_requested():
	var minion = Minion.instance()
	minion.god = self
	minion.set_navigation_2d($Navigation2D)
	minion.global_position = $Stations/KidneyStation/NewMinionPosition.global_position
	add_child(minion)
	idle_minions.push_back(minion)
	emit_signal(\"minion_created\", minion)

func _on_MovingStation_started_moving():
	_reset_position()

func _on_Station_built():
	for station in find_node(\"Stations\").get_children():
		station.exit_build_mode()

func _on_HeartStation_heart_updated():
	for station in find_node(\"Stations\").get_children():
		station.enter_build_mode()


func _on_heart_dead():
	get_tree().change_scene(\"res://rooms/GameOverScene.tscn\")


func _on_LifeTimer_timeout():
	Utils.count_up();
"

[sub_resource type="ConvexPolygonShape2D" id=2]
points = PoolVector2Array( 0, 0, 64, 0, 64, 64, 0, 64 )

[sub_resource type="NavigationPolygon" id=3]
vertices = PoolVector2Array( 0, 0, 16, 0, 16, 16, 0, 16 )
polygons = [ PoolIntArray( 0, 1, 2, 3 ) ]

[sub_resource type="ConvexPolygonShape2D" id=4]
points = PoolVector2Array( 0, 0, 16, 0, 16, 16, 0, 16 )

[sub_resource type="TileSet" id=5]
2/name = "Ladder.png 2"
2/texture = ExtResource( 7 )
2/tex_offset = Vector2( 0, 0 )
2/modulate = Color( 1, 1, 1, 0.133333 )
2/region = Rect2( 0, 0, 64, 64 )
2/tile_mode = 0
2/occluder_offset = Vector2( 0, 0 )
2/navigation_offset = Vector2( 0, 0 )
2/shape_offset = Vector2( 0, 0 )
2/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
2/shape = SubResource( 2 )
2/shape_one_way = false
2/shape_one_way_margin = 1.0
2/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 2 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
2/z_index = 0
3/name = "Navigation.png 3"
3/texture = ExtResource( 5 )
3/tex_offset = Vector2( 0, 0 )
3/modulate = Color( 1, 1, 1, 0 )
3/region = Rect2( 0, 0, 16, 16 )
3/tile_mode = 0
3/occluder_offset = Vector2( 0, 0 )
3/navigation_offset = Vector2( 0, 0 )
3/navigation = SubResource( 3 )
3/shape_offset = Vector2( 0, 0 )
3/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
3/shape_one_way = false
3/shape_one_way_margin = 0.0
3/shapes = [  ]
3/z_index = 0
4/name = "Collision.png 4"
4/texture = ExtResource( 4 )
4/tex_offset = Vector2( 0, 0 )
4/modulate = Color( 1, 1, 1, 1 )
4/region = Rect2( 0, 0, 16, 16 )
4/tile_mode = 0
4/occluder_offset = Vector2( 0, 0 )
4/navigation_offset = Vector2( 0, 0 )
4/shape_offset = Vector2( 0, 0 )
4/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
4/shape = SubResource( 4 )
4/shape_one_way = false
4/shape_one_way_margin = 1.0
4/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 4 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
4/z_index = 0

[node name="Node2D" type="Node2D"]
script = SubResource( 1 )

[node name="Background" parent="." instance=ExtResource( 9 )]
position = Vector2( 488, 272 )

[node name="Kronenberg" parent="." instance=ExtResource( 1 )]

[node name="Navigation2D" type="Navigation2D" parent="."]
script = ExtResource( 2 )

[node name="Navigation" type="TileMap" parent="Navigation2D"]
z_index = 1
tile_set = SubResource( 5 )
cell_size = Vector2( 16, 16 )
format = 1
tile_data = PoolIntArray( 851978, 3, 0, 851979, 3, 0, 851980, 3, 0, 851981, 3, 0, 851982, 3, 0, 851983, 3, 0, 851984, 3, 0, 851985, 3, 0, 851986, 3, 0, 851987, 3, 0, 851988, 3, 0, 851989, 3, 0, 851990, 3, 0, 851991, 3, 0, 851992, 3, 0, 851993, 3, 0, 851994, 3, 0, 917516, 3, 0, 917529, 3, 0, 983052, 3, 0, 983065, 3, 0, 1048588, 3, 0, 1048601, 3, 0, 1114124, 3, 0, 1114137, 3, 0, 1179660, 3, 0, 1179673, 3, 0, 1245196, 3, 0, 1245209, 3, 0, 1310732, 3, 0, 1310745, 3, 0, 1376268, 3, 0, 1376281, 3, 0, 1441798, 3, 0, 1441799, 3, 0, 1441800, 3, 0, 1441801, 3, 0, 1441802, 3, 0, 1441803, 3, 0, 1441804, 3, 0, 1441805, 3, 0, 1441806, 3, 0, 1441807, 3, 0, 1441808, 3, 0, 1441809, 3, 0, 1441810, 3, 0, 1441811, 3, 0, 1441812, 3, 0, 1441813, 3, 0, 1441814, 3, 0, 1441815, 3, 0, 1441816, 3, 0, 1441817, 3, 0, 1441818, 3, 0, 1441819, 3, 0, 1441820, 3, 0, 1441821, 3, 0, 1441822, 3, 0, 1441823, 3, 0, 1507337, 3, 0, 1507355, 3, 0, 1572873, 3, 0, 1572891, 3, 0, 1638409, 3, 0, 1638427, 3, 0, 1703945, 3, 0, 1703963, 3, 0, 1769481, 3, 0, 1769499, 3, 0, 1835017, 3, 0, 1835035, 3, 0, 1900553, 3, 0, 1900571, 3, 0, 1966089, 3, 0, 1966107, 3, 0, 2031619, 3, 0, 2031620, 3, 0, 2031621, 3, 0, 2031622, 3, 0, 2031623, 3, 0, 2031624, 3, 0, 2031625, 3, 0, 2031626, 3, 0, 2031627, 3, 0, 2031628, 3, 0, 2031629, 3, 0, 2031630, 3, 0, 2031631, 3, 0, 2031632, 3, 0, 2031633, 3, 0, 2031634, 3, 0, 2031635, 3, 0, 2031636, 3, 0, 2031637, 3, 0, 2031638, 3, 0, 2031639, 3, 0, 2031640, 3, 0, 2031641, 3, 0, 2031642, 3, 0, 2031643, 3, 0, 2031644, 3, 0 )

[node name="Ladder" parent="Navigation2D/Navigation" instance=ExtResource( 6 )]
position = Vector2( 200, 288 )

[node name="Ladder2" parent="Navigation2D/Navigation" instance=ExtResource( 6 )]
position = Vector2( 408, 288 )

[node name="Ladder3" parent="Navigation2D/Navigation" instance=ExtResource( 6 )]
position = Vector2( 440, 432 )

[node name="Ladder4" parent="Navigation2D/Navigation" instance=ExtResource( 6 )]
position = Vector2( 152, 432 )

[node name="Collisions" type="TileMap" parent="Navigation2D"]
visible = false
tile_set = ExtResource( 8 )
cell_size = Vector2( 16, 16 )
format = 1
tile_data = PoolIntArray( 393225, 4, 0, 393243, 4, 0, 458761, 4, 0, 458779, 4, 0, 524297, 4, 0, 524315, 4, 0, 589833, 4, 0, 589851, 4, 0, 655369, 4, 0, 655387, 4, 0, 720905, 4, 0, 720923, 4, 0, 786441, 4, 0, 786459, 4, 0, 851977, 4, 0, 851995, 4, 0, 917513, 4, 0, 917514, 4, 0, 917515, 4, 0, 917517, 4, 0, 917518, 4, 0, 917519, 4, 0, 917520, 4, 0, 917521, 4, 0, 917522, 4, 0, 917523, 4, 0, 917524, 4, 0, 917525, 4, 0, 917526, 4, 0, 917527, 4, 0, 917528, 4, 0, 917530, 4, 0, 917531, 4, 0, 917536, 4, 0, 983045, 4, 0, 983072, 4, 0, 1048581, 4, 0, 1048608, 4, 0, 1114117, 4, 0, 1114144, 4, 0, 1179653, 4, 0, 1179680, 4, 0, 1245189, 4, 0, 1245216, 4, 0, 1310725, 4, 0, 1310752, 4, 0, 1376261, 4, 0, 1376288, 4, 0, 1441797, 4, 0, 1441824, 4, 0, 1507333, 4, 0, 1507334, 4, 0, 1507335, 4, 0, 1507336, 4, 0, 1507338, 4, 0, 1507339, 4, 0, 1507340, 4, 0, 1507341, 4, 0, 1507342, 4, 0, 1507343, 4, 0, 1507344, 4, 0, 1507345, 4, 0, 1507346, 4, 0, 1507347, 4, 0, 1507348, 4, 0, 1507349, 4, 0, 1507350, 4, 0, 1507351, 4, 0, 1507352, 4, 0, 1507353, 4, 0, 1507354, 4, 0, 1507356, 4, 0, 1507357, 4, 0, 1507358, 4, 0, 1507359, 4, 0, 1507360, 4, 0, 1572866, 4, 0, 1572893, 4, 0, 1638402, 4, 0, 1638429, 4, 0, 1703938, 4, 0, 1703965, 4, 0, 1769474, 4, 0, 1769501, 4, 0, 1835010, 4, 0, 1835037, 4, 0, 1900546, 4, 0, 1900573, 4, 0, 1966082, 4, 0, 1966109, 4, 0, 2031618, 4, 0, 2031645, 4, 0, 2097154, 4, 0, 2097155, 4, 0, 2097156, 4, 0, 2097157, 4, 0, 2097158, 4, 0, 2097159, 4, 0, 2097160, 4, 0, 2097161, 4, 0, 2097162, 4, 0, 2097163, 4, 0, 2097164, 4, 0, 2097165, 4, 0, 2097166, 4, 0, 2097167, 4, 0, 2097168, 4, 0, 2097169, 4, 0, 2097170, 4, 0, 2097171, 4, 0, 2097172, 4, 0, 2097173, 4, 0, 2097174, 4, 0, 2097175, 4, 0, 2097176, 4, 0, 2097177, 4, 0, 2097178, 4, 0, 2097179, 4, 0, 2097180, 4, 0, 2097181, 4, 0 )

[node name="Stations" type="Node2D" parent="."]

[node name="StomachStation" parent="Stations" instance=ExtResource( 10 )]
position = Vector2( 336, 384 )

[node name="KidneyStation" parent="Stations" instance=ExtResource( 11 )]
position = Vector2( 192, 384 )

[node name="HeartStation" parent="Stations" instance=ExtResource( 12 )]
position = Vector2( 240, 242 )
do_action_automatically = false
energy_on_start = 10

[node name="BrainStation" parent="Stations" instance=ExtResource( 13 )]
position = Vector2( 304, 96 )

[node name="ImmuneStation" parent="Stations" instance=ExtResource( 14 )]
position = Vector2( 160, 96 )

[node name="LungStation" parent="Stations" instance=ExtResource( 16 )]
position = Vector2( 98, 242 )

[node name="MovingStation" parent="Stations" instance=ExtResource( 15 )]
position = Vector2( 384, 240 )

[node name="FatStation" parent="Stations" instance=ExtResource( 17 )]
position = Vector2( 56, 386 )

[node name="Player" parent="." instance=ExtResource( 3 )]
position = Vector2( 398, 472 )

[node name="MusicPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 18 )

[node name="EfficiencyTween" type="Tween" parent="."]

[node name="EnemyManager" parent="." instance=ExtResource( 19 )]

[node name="LifeTimer" type="Timer" parent="."]
autostart = true
[connection signal="eating_started" from="Stations/StomachStation" to="Kronenberg" method="_on_StomachStation_eating_started"]
[connection signal="player_requested_protein" from="Stations/StomachStation" to="." method="_on_StomachStation_player_requested_protein"]
[connection signal="minion_creation_requested" from="Stations/KidneyStation" to="." method="_on_KidneyStation_minion_creation_requested"]
[connection signal="heart_dead" from="Stations/HeartStation" to="." method="_on_heart_dead"]
[connection signal="heart_updated" from="Stations/HeartStation" to="." method="_on_HeartStation_heart_updated"]
[connection signal="request_station_boost_add" from="Stations/LungStation" to="." method="_on_LungStation_request_station_boost_add"]
[connection signal="started_moving" from="Stations/MovingStation" to="." method="_on_MovingStation_started_moving"]
[connection signal="timeout" from="LifeTimer" to="." method="_on_LifeTimer_timeout"]
